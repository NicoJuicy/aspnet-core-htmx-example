@page "{id:int?}"
@model MusicManager.Web.Pages.Genres.IndexModel
@{
    ViewData["Title"] = "Genres";
}

<h1 class="mb-5">
    Genres
    <a href="#"
       hx-get="@Url.Page("./Index", "EditModal")"
       hx-trigger="click"
       hx-target="#itemModalContainer"
       data-bs-toggle="modal"
       data-bs-target="#itemModalContainer"
       class="btn btn-outline-primary mb-2">
        <i class="bi-plus-circle" role="img" aria-label="Add Genre"></i>
        Add Genre
    </a>
</h1>

<div class="row mb-3">
    <div class="col-md-9 offset-md-3 text-end">
        @await Html.PartialAsync("_GridSearchForm", Model.Genres.PagingData)
    </div>
</div>

<div class="table-responsive">
    <table class="table table-light table-striped table-hover">
        <thead>
            <tr>
                <th hx-boost="true">
                    <sort-link page="./Index"
                               route-params="@Model.Genres.PagingData.Parameters"
                               route-sortOrder="@Model.NameSort"
                               display-name="@Html.DisplayNameFor(model => model.Genres[0].Name)" />
                </th>
                <th hx-boost="true">
                    <sort-link page="./Index"
                               route-params="@Model.Genres.PagingData.Parameters"
                               route-sortOrder="@Model.AlbumCountSort"
                               display-name="@Html.DisplayNameFor(model => model.Genres[0].AlbumCount)" />
                </th>
                <th hx-boost="true">
                    <sort-link page="./Index"
                               route-params="@Model.Genres.PagingData.Parameters"
                               route-sortOrder="@Model.CreatedSort"
                               display-name="@Html.DisplayNameFor(model => model.Genres[0].Created)" />
                </th>
                <th hx-boost="true">
                    <sort-link page="./Index"
                               route-params="@Model.Genres.PagingData.Parameters"
                               route-sortOrder="@Model.UpdatedSort"
                               display-name="@Html.DisplayNameFor(model => model.Genres[0].Updated)" />
                </th>
                <th class="text-end">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Genres.Any())
            {
                <tr>
                    <td colspan="5" class="text-center">
                        <em>There are no items to display.</em>
                    </td>
                </tr>
            }
            @foreach (var item in Model.Genres)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AlbumCount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Updated)
                    </td>
                    <td class="text-end">
                        <a href="#"
                           hx-get="@Url.Page("./Index", "EditModal", values: new { id = item.Id })"
                           hx-trigger="click"
                           hx-target="#itemModalContainer"
                           data-bs-toggle="modal"
                           data-bs-target="#itemModalContainer"
                           class="btn btn-outline-primary mb-1 mb-md-0"><i class="bi-pencil" role="img" aria-label="Edit"></i></a>
                        <a href="#"
                           hx-get="@Url.Page("./Index", "DetailsModal", values: new { id = item.Id })"
                           hx-trigger="click"
                           hx-target="#itemModalContainer"
                           data-bs-toggle="modal"
                           data-bs-target="#itemModalContainer"
                           class="btn btn-outline-primary mb-1 mb-md-0"><i class="bi-info-circle" role="img" aria-label="Details"></i></a>
                        <a href="#"
                           onclick="AppLib.confirmDelete(@item.Id, '@item.Name')"
                           data-bs-toggle="modal"
                           data-bs-target="#confirmDeleteModalContainer"
                           class="btn btn-outline-primary"><i class="bi-trash" role="img" aria-label="Delete"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@await Html.PartialAsync("_Pager", Model.Genres.PagingData)

@await Html.PartialAsync("_ItemModalContainer")

@await Html.PartialAsync("_ConfirmDeleteModal")
