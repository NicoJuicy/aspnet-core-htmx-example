@page "{id:int?}"
@model MusicManager.Web.Pages.Albums.IndexModel
@{
    ViewData["Title"] = "Albums";
}

<h1 class="mb-5">Albums</h1>

<div class="row mb-3">
    <div class="col-md-3 text-right text-md-left">
        <a href="#"
           hx-get="@Url.Page("./Index", "EditModal")"
           hx-trigger="click"
           hx-target="#itemModalContainer"
           class="btn btn-outline-primary mb-1 mb-md-0">
            <i class="bi-plus-circle" role="img" aria-label="Add Album"></i>
            Add Album
        </a>
    </div>
    <div class="col-md-9">
        <form asp-page="./Index" method="get" class="form-inline justify-content-end">
            <input type="text" name="searchString" value="@Model.Albums.PagingData.CurrentFilter" class="form-control mr-2 w-50" />
            <input type="hidden" name="sortOrder" value="@Model.Albums.PagingData.CurrentSort" />
            <button type="submit" class="btn btn-primary">
                <i class="bi-search" role="img" aria-label="Search"></i>
                Search
            </button>
            @if (!string.IsNullOrWhiteSpace(Model.Albums.PagingData.CurrentFilter))
            {
                <a asp-page="./Index" asp-route-sortOrder="@Model.Albums.PagingData.CurrentSort" class="btn btn-secondary ml-2">
                    <i class="bi-backspace" role="img" aria-label="Clear"></i>
                    Clear
                </a>
            }
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th hx-boost="true">
                <sort-link page="./Index"
                           route-sortOrder="@Model.ArtistNameSort"
                           route-currentFilter="@Model.Albums.PagingData.CurrentFilter"
                           current-sort="@Model.Albums.PagingData.CurrentSort"
                           display-name="@Html.DisplayNameFor(model => model.Albums[0].ArtistName)" />
            </th>
            <th hx-boost="true">
                <sort-link page="./Index"
                           route-sortOrder="@Model.TitleSort"
                           route-currentFilter="@Model.Albums.PagingData.CurrentFilter"
                           current-sort="@Model.Albums.PagingData.CurrentSort"
                           display-name="@Html.DisplayNameFor(model => model.Albums[0].Title)" />
            </th>
            <th hx-boost="true">
                <sort-link page="./Index"
                           route-sortOrder="@Model.TrackCountSort"
                           route-currentFilter="@Model.Albums.PagingData.CurrentFilter"
                           current-sort="@Model.Albums.PagingData.CurrentSort"
                           display-name="@Html.DisplayNameFor(model => model.Albums[0].TrackCount)" />
            </th>
            <th hx-boost="true">
                <sort-link page="./Index"
                           route-sortOrder="@Model.ReleaseYearSort"
                           route-currentFilter="@Model.Albums.PagingData.CurrentFilter"
                           current-sort="@Model.Albums.PagingData.CurrentSort"
                           display-name="@Html.DisplayNameFor(model => model.Albums[0].ReleaseYear)" />
            </th>
            <th hx-boost="true">
                <sort-link page="./Index"
                           route-sortOrder="@Model.CreatedSort"
                           route-currentFilter="@Model.Albums.PagingData.CurrentFilter"
                           current-sort="@Model.Albums.PagingData.CurrentSort"
                           display-name="@Html.DisplayNameFor(model => model.Albums[0].Created)" />
            </th>
            <th hx-boost="true">
                <sort-link page="./Index"
                           route-sortOrder="@Model.UpdatedSort"
                           route-currentFilter="@Model.Albums.PagingData.CurrentFilter"
                           current-sort="@Model.Albums.PagingData.CurrentSort"
                           display-name="@Html.DisplayNameFor(model => model.Albums[0].Updated)" />
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Albums)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ArtistName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TrackCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseYear)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Updated)
                </td>
                <td class="text-right">
                    <a href="#"
                       hx-get="@Url.Page("./Index", "EditModal", values: new { id = item.Id })"
                       hx-trigger="click"
                       hx-target="#itemModalContainer"
                       class="btn btn-outline-primary mb-1 mb-md-0"><i class="bi-pencil" role="img" aria-label="Edit"></i></a>
                    <a href="#"
                       hx-get="@Url.Page("./Index", "DetailsModal", values: new { id = item.Id })"
                       hx-trigger="click"
                       hx-target="#itemModalContainer"
                       class="btn btn-outline-primary mb-1 mb-md-0"><i class="bi-info-circle" role="img" aria-label="Details"></i></a>
                    <a href="#"
                       onclick="AppLib.confirmDelete(@item.Id, '@item.Title')"
                       class="btn btn-outline-primary"><i class="bi-trash" role="img" aria-label="Delete"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

@await Html.PartialAsync("_Pager", Model.Albums.PagingData)

<div id="itemModalContainer"></div>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Album</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete <strong id="deleteItemName"></strong>?
            </div>
            <div class="modal-footer">
                <!form hx-delete="@Url.Page("./Index")"
                       onsubmit="AppLib.preventMultiSubmit()">
                    <input id="deleteItemId" name="deleteItemId" type="hidden" value="">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                    @Html.AntiForgeryToken()
                </!form>
            </div>
        </div>
    </div>
</div>